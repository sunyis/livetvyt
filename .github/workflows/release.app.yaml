name: release app

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag (e.g., 0.1.0)'
        required: true
        default: '1.'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
    name: Build and Release
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures GoReleaser can access full git history

      - name: Set Up Go Environment
        uses: actions/setup-go@v4
        with:
          go-version: ^1.22
          cache: true

      - name: Install GoReleaser
        run: |
          GORELEASER_VERSION=$(curl -s "https://api.github.com/repos/goreleaser/goreleaser/releases/latest" | grep 'tag_name' | cut -d '"' -f 4)
          curl -sL "https://github.com/goreleaser/goreleaser/releases/download/${GORELEASER_VERSION}/goreleaser_${GORELEASER_VERSION}_Linux_x86_64.tar.gz" | tar -xz -C /usr/local/bin
          # Alternatively, you can use a predefined version if you prefer
          # curl -sL "https://github.com/goreleaser/goreleaser/releases/download/vX.Y.Z/goreleaser_vX.Y.Z_Linux_x86_64.tar.gz" | tar -xz -C /usr/local/bin
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Run GoReleaser
        run: |
          goreleaser release \
            --rm-dist \
            --snapshot \
            --skip-publish \
            --id-prefix "github-actions-" \
            --parallelism=2 \
            --timeout=15m \
            --archive-formats="zip" \
            --platforms="linux/amd64,linux/arm64"
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

  cleanup:
    name: Cleanup Old Workflow Runs
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
